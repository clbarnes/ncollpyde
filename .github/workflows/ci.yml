on: [push, pull_request]

defaults:
  run:
    shell: bash

jobs:

  lint-rust:
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          override: true
          components: rustfmt, clippy
      - run: cargo clippy
      - run: cargo fmt -- --check

  lint-python:
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: '3.x'
      - run: pip install $(grep -E '^(black|flake8)' requirements.txt)
      - run: flake8 ncollpyde tests
      - run: black ncollpyde tests --check

  test-rust:
    strategy:
      matrix:
        os: [ubuntu-18.04, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          override: true
      - run: cargo test

  test-python:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-18.04, macos-latest, windows-latest]
        python-version: ['3.7', '3.8']
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          override: true
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - run: |
          pip install -U pip wheel Cython
          pip install $(grep -v -E '^(trimesh|#|\s*$)' requirements.txt)
        name: Install dependencies
      # - if: startsWith(matrix.os, 'ubuntu')
      #   run: |
      #     sudo apt-get install libspatialite-dev libgeos-dev
      #     pip install $(grep -E ^trimesh requirements.txt)
      #   name: Install trimesh (linux only)
      - run: |
          TGT_DIR="target/wheels/${{ matrix.python-version }}"
          mkdir -p $TGT_DIR
          maturin build --interpreter python --out $TGT_DIR
          pip install $TGT_DIR/*.whl
        name: Install package
      - run: pytest --verbose --benchmark-skip

  deploy:
    strategy:
      matrix:
        python-version: ['3.7', '3.8']
        os: [macos-latest, windows-latest, ubuntu-18.04]
    needs: [lint-rust, lint-python, test-rust, test-python]
    runs-on: ${{ matrix.os }}
    if: github.event_name == 'push' && contains(github.ref, 'refs/tags/v')
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          override: true
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - run: pip install $(grep ^maturin requirements.txt)
      - if: startsWith(matrix.os,'ubuntu') && matrix.python-version == '3.8'
        run: maturin publish -u __token__ -p ${{ secrets.MATURIN_PASSWORD }} --interpreter
        name: Deploy sdist
      - run: maturin publish -u __token__ -p ${{ secrets.MATURIN_PASSWORD }} -i python --no-sdist
        name: Deploy wheels
